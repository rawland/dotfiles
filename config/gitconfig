[core]
    editor = /usr/bin/vim

[color]
    diff = auto
    status = auto
    branch = auto
    ui = auto
    interactive = auto

[user]
    name = Roland Siegbert
    email = roland@siegbert.info

# Default push behavior
[push]
    default = current

[alias]
# Overview:
    alias = "!git config -l | grep alias | cut -c 7-"

# Abbrev:
    br = branch
    ci = commit
    cb = checkout -b
    co = checkout
    df = diff
    ds = diff --staged
    st = status -sb
    amend = commit --amend -C HEAD
    undo = reset --soft HEAD^
    wipe = reset --hard HEAD
    ready = rebase -i @{u}
    fix  = commit -m "Fixup"

# Finding things:
    f = "!git ls-files | grep -i"
    grep = grep -Ii
    groot = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

# Whitespace removal in staged files:
    wsf = "!git commit -mTemp && git stash && git rebase HEAD~ --whitespace=fix && git reset --soft HEAD~ && git stash pop"

# File Tools
    op = "!f() { $(git editor) $(git ls-files | grep -i \"$@\"); }; f"
    # open edited
    eop = "! $(git editor) $(git ls-files --modified)"
    # grep and open
    gop = "!f(){ $(git editor) $(git grep --name-only \"$@\"); }; f"
    giop = "!f(){ $(git editor) $(git grep -i --name-only \"$@\"); }; f"
    tree = ls-tree --full-tree -r HEAD

# History:
    lg = log --pretty=format:'%C(blue)%ad%C(reset) %C(yellow)%h%C(reset) %s%C(green) %cn%C(red)%d%C(reset)' --decorate --date=short
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    lgn = log --pretty=format:'%C(blue)%ad%C(reset) %C(yellow)%h%C(reset) %C(green)%cn%C(reset) %C(red)%d%C(reset) %s' --decorate --date=short
    graph = log --all --graph --pretty=format':%C(red)%h%C(blue)%d%C(reset) %s %C(white) %an, %ar%C(reset)'

# Orientation:
    changes = !sh -c 'git diff --stat $1 | tail -1' -
    conflicts = !vim $(git status | fgrep modified | cut -d: -f2)
    last = log -1 -p
    sub = !cd $(git rev-parse --show-toplevel) && git submodule update --init | fgrep -v registered
    v = rev-parse HEAD
    standup = log --since '1 day ago' --oneline --author siegbert@cats.rwth-aachen.de

# Don't get fired:
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

# Configurational
    editor = config --get core.editor

[pager]
    log = diff-highlight | less
    show = diff-highlight | less
    diff = diff-highlight | less
